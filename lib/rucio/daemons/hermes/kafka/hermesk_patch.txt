--- hermes.py	2023-12-06 08:29:24
+++ hermesk.py	2024-09-30 13:36:40
@@ -14,7 +14,7 @@
 # limitations under the License.
 
 """
-   Hermes is a daemon that get the messages and sends them to external services (influxDB, ES, ActiveMQ).
+   Hermesk is a daemon that get the messages and sends them to external services (influxDB, ES, ActiveMQ, Kafka).
 """
 
 import calendar
@@ -48,6 +48,7 @@
 from rucio.core.message import delete_messages, retrieve_messages
 from rucio.core.monitor import MetricManager
 from rucio.daemons.common import run_daemon
+from rucio.daemons.hermes.kafka.kafka_support import setup_kafka, deliver_to_kafka
 
 if TYPE_CHECKING:
     from collections.abc import Callable
@@ -60,11 +61,11 @@
 
 METRICS = MetricManager(module=__name__)
 graceful_stop = threading.Event()
-DAEMON_NAME = "hermes"
+DAEMON_NAME = "hermesk"
 
 RECONNECT_COUNTER = METRICS.counter(
     name="reconnect.{host}",
-    documentation="Counts Hermes reconnects to different ActiveMQ brokers",
+    documentation="Counts Hermesk reconnects to different brokers",
     labelnames=("host",),
 )
 
@@ -481,9 +482,9 @@
     return 204
 
 
-def hermes(once: bool = False, bulk: int = 1000, sleep_time: int = 10) -> None:
+def hermesk(once: bool = False, bulk: int = 1000, sleep_time: int = 10) -> None:
     """
-    Creates a Hermes Worker that can submit messages to different services (InfluXDB, ElasticSearch, ActiveMQ)
+    Creates a Hermesk Worker that can submit messages to different services (InfluXDB, ElasticSearch, ActiveMQ, Kafka)
     The list of services need to be define in the config service in the hermes section.
     The list of endpoints need to be defined in rucio.cfg in the hermes section.
 
@@ -547,6 +548,13 @@
         except Exception as err:
             logger(logging.ERROR, str(err))
 
+    message_filter = None
+    if "kafka" in services_list:
+       try:
+           message_filter = setup_kafka(logger)
+       except Exception as err:
+           logging.exception(err)
+
     worker_number, total_workers, logger = heartbeat_handler.live()
     message_dict = {}
     message_ids = []
@@ -558,6 +566,7 @@
         total_threads=total_workers,
     )
 
+    msg_num = 0
     to_delete = []
     if messages:
         for message in messages:
@@ -672,7 +681,26 @@
                         to_delete.append(message)
             except Exception as error:
                 logger(logging.ERROR, "Error sending to ActiveMQ : %s", str(error))
+        if "kafka" in message_dict:
+            t_time = time.time()
+            try:
+                messages_sent = deliver_to_kafka(
+                    message_filter=message_filter, messages=message_dict["kafka"]
+                )
+                logger(
+                    logging.INFO,
+                    "%s messages processed by Kafka filter in %s seconds",
+                    len(message_dict["kafka"]),
+                    time.time() - t_time,
+                )
+                for message in message_dict["kafka"]:
+                    if message["id"] in messages_sent:
+                        to_delete.append(message)
+            except Exception as error:
+                logger(logging.ERROR, "Error sending to Kafka : %s", str(error))
 
+
+
     logger(logging.INFO, "Deleting %s messages", len(to_delete))
     to_delete = [
         {
@@ -705,17 +733,17 @@
     broker_timeout: int = 3,
 ) -> None:
     """
-    Starts up the hermes threads.
+    Starts up the hermesk threads.
     """
     setup_logging(process_name=DAEMON_NAME)
 
     if rucio.db.sqla.util.is_old_db():
         raise DatabaseException("Database was not updated, daemon won't start")
 
-    logging.info("starting hermes threads")
+    logging.info("starting hermesk threads")
     thread_list = [
         threading.Thread(
-            target=hermes,
+            target=hermesk,
             kwargs={
                 "once": once,
                 "bulk": bulk,
